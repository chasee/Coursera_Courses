nyc <- list(pop = 8405837,)
nyc <- list(pop = 8405837,
boroughs = c("Manhattan", "Bronx", "brooklyn",
"Queens", "Staten Island"),
capital = FALSE)
for (i in nyc){
print(class(nyc[i]))
}
for (i in nyc){
print(class(nyc[[i]]))
}
nyc
nyc[1]
nyc[[1]]
for (i in nyc){
print(class(i))
}
lapply(nyc, class)
foo <- seq(1, 100, by = 2)
foo.squared  <- NULL
for (i in 1:50) {
foo.squared[i] <- foo[i]^2
}
foo.squared  <- foo^2
lapply
.Internal
rm(foo, foo.squared)
cities <- c("New York", "Paris", "London", "Tokyo",
"Rio de Janeiro", "Cape Town")
cities
num_chars <- c()
for(I in 1:length(cities)){
num_chars[i] <- nchar(cities[i])
}
num_chars
length(cities)
num_chars <- c()
num_chars
for(i in 1:length(cities)) {
num_chars[i] <- nchar(cities[i])
}
num_chars
rm(I)
num_chars <- c()
num_chars <- lapply(cities, nchar)
num_chars
unlist(lapply(cities, nchar))
oil_prices <- list(2.37, 2.49, 2.18, 2.22, 2.47, 2.32)
triple <- function(x) {
3 * x
}
result <- lapply(oil_prices, triple)
str(result)
unlist(result)
multiply <- function(x, factor) {
x * factor
}
time3 <- lapply(oil_prices, multiply, factor = 3)
unlist(times3)
unlist(time3)
rm(list = ls())
x <- "dataset"
typeof(x)
attributes(x)
y <- 1:10
typeof(y)
length(y)
attributes(y)
z <- c(1L, 2L, 3L)
typeof(z)
x <- vector()
typeof(x)
vector("character", length = 10)
character(5)
numeric(5)
logical(5)
x <- c(1, 2, 3)
x
length(x)
z <- c("Alec", "Dan", "Rob", "Karthik")
typeof(z)
length(z)
class(z)
str(z)
x <- list(1, "a", TRUE, 1 + (0 + 4i))
x
class(x)
x <- 1:10
x <- as.list(x)
length(x)
class(x[1])
class(x[[1]])
xlist <- list(a = "Karthik Ram", b = 1:10, data = head(iris))
xlist
length(xlist)
str(xlist)
Inf/Inf
pnorm(70, mean = 80, sd = 10)
qnorm(0.95, mean = 1100, sd = 75)
qnorm(0.95, mean = 1100, sd = 75/sqrt(100))
pbinom(3, size = 5, prob = 0.5, lower.tail = FALSE)
pnorm(16, mean = 15, sd = 1) - pnorm(14, mean = 15, sd = 1)
ppois(10, lambda = 15)
library(dplyr)
library(hflights)
install.packages("hflights")
library(hflights)
library(ggplot2)
search()
?hflights
flights <- hflights
str(flights)
hglights <- tbl_df(hflights)
hflights <- hglights
rm(hglights)
hflights
hflights
glimps(hflights)
glimpse(hflights)
a <- select(hflights, ArrDelay)
head(a)
summarize(a)
summarise(a)
summarize(hflights)
str(hflights)
delays <- select(hflights, ActualElapsedTime:DepDelay)
head(delays)
str(delays)
delays <- tbl_df(delays)
str(delays)
delays <- mutate(delays, loss = ArrDelay - DepDelay)
delays
hist(h2$loss)
hist(delays$loss)
mean(delay$loss)
mean(delays$loss)
mean(delays$loss, na.rm = TRUE)
g1 <- mutate(hflights, ActualGroundTime = ActualElapsedTime - AirTime)
g2 <- mutate(g1, GroundTime = TaxiIn + TaxiOut)
g3 <- mutate(g2, AverageSpeed = Distance / AirTime * 60)
head(g3)
g3 <- tbl_df(g3)
names(g3)
glimpse(select(g3, ActualGroundTime:AverageSpeed))
AGT <- g3$ActualGroundTime
GT <- g3$GroundTime
AGT-Gt
AGT-GT
sum(AGT-GT)
sum(AGT-GT, na.rm = TRUE)
identical(AGT, GT)
?identical
str(AGT)
str(GT)
sum(is.na(AGT))
sum(is.na(GT))
hflights
names(hflights)
names(g3)
NAs <- sum(is.na(c(hflights$ActualElapsedTime, hflights$AirTime, hflights$TaxiIn, hflights$TaxiOut)))
NAs
NAs <- is.na(c(hflights$ActualElapsedTime, hflights$AirTime, hflights$TaxiIn, hflights$TaxiOut))
NAs
temp <- select(hflights, ActualElapsedTime, AirTime, TaxiIn, TaxiOut)
?summarize
sum(is.na(temp))
sum(is.na(temp[,1]))
sum(is.na(temp[,2]))
sum(is.na(temp[,3]))
sum(is.na(temp[,4]))
sum(is.na(hflights$ActualElapsedTime))
sum(is.na(hflights$AirTime))
sum(is.na(hflights$TaxiIn))
sum(is.na(hflights$TaxiOut))
str(hflights)
names(g3)
f1 <- select(hflights, starts_with("Cancel"), DepDelay)
f1
filter(hflights, Cancelled == 1)
sum(filter(hflights, Cancelled = 1))
sum(filter(hflights, Cancelled == 1))
?loops
?loop
getwd()
setwd("Coursera_Courses/2015-10-05/getdata-033/quizzes/solutions/")
data <- read.csv("getdata-data-ss06hid.csv")
rm(list = ls())
data <- read.csv("getdata-data-ss06hid.csv")
str(data)
names(data)
agricultureLogical <- filter(data, ACR == 3, AGS == 6)
agricultureLogical
which(agricultureLogical[1:3, ])
which(agricultureLogical)
agricultureLogical <- filter(data, ACR == 3 & AGS == 6)
names(agricultureLogical)
which(data[agricultureLogical])
data[agricultureLogical]
which(data, data$ACR == 3 & data$AGS == 6)
which(agricultureLogical)[1:3]
which(agricultureLogical)[1:3, ]
agricultureLogical <- with(data, ACR == 3 & AGS == 6)
agricultureLogical
head(agricultureLogical)
which(agricultureLogical)[1:3]
install.package("jpeg")
install.packages("jpeg")
library(jpeg)
imgUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg"
imgFile <- tempfile()
download.file(imgUrl, imgFile)
img <- readJPEG(imgFile, native = TRUE)
img
quantile(img, probs = c(0.3, 0.8))
download.file(imgUrl, imgFile, method = "curl")
install.packages("curl")
library(curl)
download.file(imgUrl, imgFile, method = "curl")
imgUrl <- "http://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg"
imgFile <- tempfile()
download.file(imgUrl, imgFile)
img <- readJPEG(imgFile, native = TRUE)
quantile(img, probs = c(0.3, 0.8))
rm(list = ls())
gdpURL <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
eduUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv"
gdpFile <- tempfile()
eduFile <- tempfile()
download.file(gdpUrl, gdpFile)
gdpUrl <- gdpURL
rm(gdpURL)
download.file(gdpUrl, gdpFile)
download.file(eduUrl, eduFile)
gdpData <- read.csv(gdfFile, skip = 5, nrows = 190, stringsAsFactors = FALSE, header = FALSE)
gdpData <- read.csv(gdpFile, skip = 5, nrows = 190, stringsAsFactors = FALSE, header = FALSE)
eduData <- read.csv(eduFile, stringsAsFactors = FALSE)
head(gdpData)
head(eduData)
gdpData <- gdpData[, c(1, 2, 4, 5)]
colnames(gdpData) <- c("Country Code", "Rank", "Country.Name", "GDP.Value")
gdpData$GDP.Value <- as.numeric(gsub(",", "", gdpData$GDP.Value))
matchedData <- merge(gdpData, eduData, by.x = "CountryCode", by.y = "CountryCode")
matchedData <- merge(gdpData, eduData, by.x = "CountryCode", by.y = "CountryCode")
names(gdpData)
colnames(gdpData) <- c("CountryCode", "Rank", "Country.Name", "GDP.Value")
matchedData <- merge(gdpData, eduData, by.x = "CountryCode", by.y = "CountryCode")
dim(matchedData)
library(dplyr)
arrange(matchedData, desc(Rank))[13, 3]
mean(subset(matchedData, Income.Group %in% "High income: OECD", select = c(Rank))$Rank)
mean(subset(matchedData, Income.Group %in% "High income: nonOECD", select = c(Rank))$Rank)
require("Hmisc")
install.packages("Hmisc")
library(Hmisc)
matchedData$Rank.Groups = cut2(matchedData$Rank, g = 5)
table(matchedData$Income.Group, matchedData$Rank.Groups)
rm(list = ls())
data.url <- "https://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip"
data.file <- tempfile()
download.file(data.url, data.file)
unz(data.file)
?unz
unz
?unz
?unzip
unzip(data.file)
unzip(data.file, list = TRUE)
getwd()
dir()
setwd("../../")
dir()
setwd("course_project/")
dir()
rm(list = ls())
if(!file.exists("./data")) {
dir.create("./data")
}
file.Url <- "https://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip"
download.file(fileUrl, "./data/dataset.zip")
rm(list = ls())
if(!file.exists("./data")) {
dir.create("./data")
}
file.Url <- "https://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip"
?download.file
download.file(url = file.Url, destfile = "./data/data.zip")
dir()
setwd("data")
dir()
setwd("../")
getwd()
dir()
rm(list = ls())
if(!file.exists("./data")) {dir.create("./data")}
file.Url <- "https://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip"
download.file(fileUrl, "./data/dataset.zip")
download.file(file.Url, "./data/dataset.zip")
dir()
data.name <- "./data/dataset.zip"
data.name
?unzip
unzip(data.name, list = TRUE)
unzip(data.name, list = TRUE)
data.Loc <- "./data/dataset.zip"
files <- unzip(data.Loc, list = TRUE)["Name"]
files
unzip(file.Loc, exdir = "./data")
unzip(data.Loc, exdir = "./data")
rm(files)
path_rf <- file.path("./data", "UCI HAR Dataset")
path_rf
data.path <- path_rf
files <- list.files(data.path, recursive = TRUE)
files
data.Activity_Test <- read.table(file.path(data.path, "test", "Y_test.txt"), header = FALSE)
data.Activity_Train <- read.table(file.path(data.path, "train", "Y_train.txt"), header = FALSE)
names(data.Activity_Test)
str(data.Activity_Test)
dir()
files
data.Subject_Test <- read.table(file.path(data.path, files[14]))
files[14]
files
data.Activity_Test <- read.table(file.path(data.path, files[16]), header = FALSE)
data.Activity_Train <- read.table(file.path(data.path, files[28]), header = FALSE)
data.Subject_Test <- read.table(file.path(data.path, files[14]), header = FALSE)
data.Subject_Train <- read.table(file.path(data.path, files[26]))
data.Features_Test <- read.table(file.path(data.path, files[15]))
data.Features_Train <- read.table(file.path(data.path, files[27]))
str(data.Activity_Test)
str(data.Activity_Train)
str(data.Subject_Train)
str(data.Subject_Test)
str(data.Features_Test)
data.Subject <- rbind(data.Subject_Train, data.Subject_Test)
data.Activity <- rbind(data.Activity_Train, data.Activity_Test)
data.Features <- rbind(data.Features_Train, data.Features_Test)
head(data.subject)
head(data.Subject)
names(data.Subject) <- "subject"
names(data.Activity) <- "activity"
names(data.Subject)
head(data.Subject)
summary(data.Subject)
files
data.Features_Names <- read.table(file.path(data.path, files[2]))
data.Features_Names
head(data.Activity)
names(data.Features) <- data.Features_Names$V2
head(data.Features)
data.Subject <- rbind(data.Subject_Train, data.Subject_Test)
data.Activity <- rbind(data.Activity_Train, data.Activity_Test)
data.Features <- rbind(data.Features_Train, data.Features_Test)
names(data.Subject) <- "subject"
names(data.Activity) <- "activity"
names(data.Features) <- data.Features_Names$V2
combine <- cbind(data.Subject, data.Activity)
data <- cbind(data.Features, combine)
names(data)
sub_data.Features_Names <- data.Features_Names$V2[grep("mean\\(\\)|std\\(\\)", data.Features_Names$V2)]
str(sub_data.Features_Names)
sel.Names <- c(as.character(sub_data.Features_Names), "subject", "activity")
data_sub <- subset(Data, select = sel.Names)
data_sub <- subset(data, select = sel.Names)
str(data_sub)
files
activity.Labs <- read.table(file.path(data.path, files[1]), header = FALSE)
head(data_sub$activity, 30)
head(activity.Labs)
temp.activ <- data_sub$activity
temp.activ <- as.factor(temp.activ)
str(temp.activ)
levels(temp.activ) <- activity.Labs
str(temp.activ)
levels(temp.activ) <- activity.Labs$V2
str(temp.activ)
head(temp.activ)
head(temp.activ, 30)
head(data_sub$activity)
temp.activ <- data_sub$activity
temp.activ <- as.factor(temp.activ)
attr(temp.activ)
attributes(temp.activ)
a <- levels(temp.activ)
a
activity.Labs
names(a) <- activity.Labs$V2
a
head(temp.activ)
levels(temp.activ) <- activity.Labs$V2
head(temp.activ, 30)
levels(data_sub$activity) <- activity.Labs$V2
head(data_sub$activity, 30)
data_sub$activity <- as.factor(data_sub$activity)
str(data_sub$activity)
levels(data_sub$activity) <- activity.Labs$V2
str(data_sub$activity)
head(data_sub$activity, 30)
?as.factor
names(data_sub) <- gsub("^t", "time", names(data_sub))
names(data_sub) <- gsub("Acc", "Accelerometer", names(data_sub))
names(data_sub) <- gsub("BodyBody", "Body", names(data_sub))
names(data_sub) <- gsub("^f", "frequency", names(data_sub))
names(data_sub) <- gsub("Gyro", "Gyroscope", names(data_sub))
names(data_sub) <- gsub("Mag", "Magnitude", names(data_sub))
names(data_sub)
library(dplyr)
data.New <- aggregate(. ~subject + activity, data_sub, mean)
str(data.New)
data.New <- data.New[order(data.New$subject, data.New$activity)]
exists(names(data.New$subject))
data.New$subject
data.New <- data.New[order(data.New$subject, data.New$activity), ]
str(data.New)
