swirl()
library(swirl)
swirl()
install_from_swirl("Statistical Inference")
swirl()
x <- 1:4
p <- x/sum(x)
temp <- rbind(x, p)
rownames(temp) <- c("X", "Prob")
temp
mean(temp)
x <- 1:4
y <- 6:9
z <- numeric(length(x))
for(i in seq_along(x)){
z <- x[i] + y[i]
}
z
for(i in seq_along(x)){
z[i] <- x[i] + y[i]
}
z
x <- c(-0.5, 0, 1, 1, 1.5)
y <- c(0, 0, 2, 0, 0)
plot(x, y, lwd = 3, frame = FALSE, type = "l")
pbeta(0.75, 2, 1)
?pbeta
value2 <- 70
mean2 <- 80
sd2 <- 10
answ2 <- pnorm(value2, mean2, sd2)
round(answ2, 2)
quantil3 <- 0.95; mean3 <- 1100; sd3 <- 75
answ3 <- qnorm(quantil3, mean3, sd3)
round(answ3, 0)
mean4 <- 1100
sd4 <- 75
n4 <- 100
var4 <- sd4/sqrt(n4)
quantile4 <- 1.645
answ4 <- mean4 + (var4 * quantile4)
answ4
prob4 <- choose(5, 4)0.5^4(1-0.5)^1
prob4 <- choose(5, 4)
(0.5^4)*(1-0.5)^1
prob4
prob4 <- prob4 * 0.03125
prob5 <- choose(5, 5) * ((0.5^5)*(1-0.5)^0)
answ5 <- prob4 + prob5
round(answ5, 2)
mean6 <- 15
sd6 <- 10
value6a <- (14-mean6)/(sd6/sqrt(100))
p14 <- pnorm(value6a)
value6b <- (16 - mean6)/(sd6/sqrt(100))
p16 <- pnorm(value6b)
answ6 <- p16-p14
round(answ6, 2)
mean(rnorm(1e+07, mean = 0.5, sd = sqrt(1/12)))
round(ppois(10, lambda = 5 * 3), 2)
?gl
install.packages("mosaic")
library(devtools)
library(oilabs)
devtools::install_github("andrewpbray/oilabs")
library(oilabs)
install.packages(c("dplyr", "ggplot2", "devtools"))
install.packages(c("dplyr", "ggplot2", "devtools"))
devtools::install_github("andrewpbray/oilabs")
library(oilabs)
library(dplyr)
library(ggplot2)
search()
data(arbuthnot)
head(arbuthnot)
tail(arbuthnot)
str(arbuthnot)
dim(arbuthnot)
names(arbuthnot)
View(arbuthnot)
arbuthnot %>% select(boys)
arbuthnot %>% select(girls)
arbuthnot %>% select(girls) %>% summary()
install.packages("mosaic")
library(mosaic)
?xyplot
xyplot(girls ~ year, data = arbuthnot)
xyplot(girls ~ year, data = arbuthnot, type = "l")
?xyplot
?lines
?llines
xyplot(girls ~ year, data = arbuthnot, type = "l")
5218 + 4683
head(arbuthnot)
arbuthnot %>% mutate(total = boys + girls)
sum(arbuthnot$total)
sum(arbuthnot[, 4])
arbuthnot[, 4]
arbuthnot %>% mutate(total = boys + girls) %>% sum(total)
arbuthnot %>% mutate(total = boys + girls) %>% sum(arbuthnot$total)
arbuthnot %>% mutate(total = boys + girls)
arbuthnot %>% mutate(total = boys + girls) %>% sum()
arbuthnot <- arbuthnot %>% mutate(total = boys + girls)
xyplot(boys + girls ~ year, data = arbuthnot, type = "l")
arbuthnot %>% mutate(ratio = boys / girls)
arbuthnot <- arbuthnot %>% mutate(ratio = boys / girls)
arbuthnot <- arbuthnot %>% mutate(propB = boys / (boys + girls))
arbuthnot <- arbuthnot %>% mutate(propG = girls / (boys + girls))
head(arbuthnot)
xyplot(propB ~ year, data = arbuthnot, type = "l")
arbuthnot %>% mutate(boys > girls)
data(present)
rm(arbuthnot)
dim(present)
names(present)
str(present)
max(present$year)
min(present$year)
max(present)
max(present$boys)
max(present$girls)
min(present$boys)
min(present$girls)
present %>% mutate(ratio = boys / girls)
present <- present %>% mutate(ratio = boys / girls)
xyplot(ratio ~ year, data = present, type = "l")
data(arbuthnot)
arbuthnot <- arbuthnot %>% mutate(ratio = boys / girls)
library(XML)
install.packages(XPath)
install.packages("XPath")
fileUrl <- "http://www.w3schools.com/xml/simple.xml"
doc <- xmlTreeParse(fileUrl, useInternal=TRUE)
rootNode <- xmlRoot(doc)
xmlName(rootNode)
names(rootNode)
rootNode[[1]]
rootNode[[1]][[1]]
xmlSApply(rootNode, xmlValue)
xpathSApply(rootNode, "//name", xmlValue)
xpathSApply(rootNode, "//price", xmlValue)
fileUrl <- "http://espn.go.com/nfl/team/_/name/bal/baltimore-ravens"
doc <- htmlTreeParse(fileUrl, useInternal=TRUE)
scores <- xpathSApply(doc,"//li[@class='score']", xmlValue)
teams <- xpathSApply(doc, "//li[@class='team-name']", xmlValue)
scores
scores <- xpathSApply(doc, "//li[@class='score']", xmlValue)
scores
rm(scores)
doc
scores <- xpathSApply(doc, "//li[@class='score']", xmlValue)
teams
scores <- xpathSApply(doc, "//div[@class='score']", xmlValue)
teams <- xpathSApply(doc, "//div[@class='team-name']", xmlValue)
scores
teams
teams <- xpathSApply(doc, "//div[@class='game-info']", xmlValue)
teams
install.packages("jsonlite")
library(jsonlite)
jsonData <- fromJSON("https://api.github.com/users/jtleek/repos")
names(jsonData)
names(jsonData$owner)
names(jsonData$owner$login)
names(jsonData$owner$login)
jsonData$owner$login
myjson <- toJSON(iris, pretty=TRUE)
cat(myjson)
iris2 <- fromJSON(myjson)
head(iris2)
install.packages("data.table")
library(data.table)
DF <- data.frame(x=rnorm(9), y=rep(c("a", "b", "c"), each=3), z=rnorm(9))
head(DF, 3)
DT <- data.table(x=rnorm(9), y=rep(c("a", "b", "c"), each=3), z=rnorm(9))
head(DT, 3)
tables()
table()
# installing/loading the package:
if(!require(installr)) {
install.packages("installr"); require(installr)} #load / install+load installr
search()
updateR()
install.packages("xlsx")
library(xlsx)
install.packages("rJava")
library(rJava)
library(rJava)
install.packages("rJava")
fileUrl3 <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FDATA.gov_NGAP.xlsx"
download.file(fileUrl3, "q3.xlsx")
colIndex <- 7:15
rowIndex <- 18:23
q3.data <- read.xlsx("q3.xlsx", sheetIndex = 1, colIndex = colIndex, rowIndex = rowIndex)
library(xlsx)
q3.data <- read.xlsx("q3.xlsx", sheetIndex = 1, colIndex = colIndex, rowIndex = rowIndex)
dir()
setwd("Coursera_Courses/2015-10-05/getdata-033/Quizzes/")
dir()
download.file(fileUrl3, "q3.xlsx")
q3.data <- read.xlsx("q3.xlsx", sheetIndex = 1, rowIndex = rownIndex, colIndex = colIndex)
download.file(fileUrl3, "q3.xlsx", mode='wb')
q3.data <- read.xlsx("q3.xlsx", sheetIndex = 1, rowIndex = rownIndex, colIndex = colIndex)
q3.data <- read.xlsx("q3.xlsx", sheetIndex = 1, rowIndex = rowIndex, colIndex = colIndex)
q3.data
dat <- q3.data
sum(dat$Zip*dat$Ext, na.rm = T)
install.packages("XML")
library(XML)
fileUrl4 <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml"
doc <- xmlTreeParse(fileUrl4, useInternal = TRUE)
fileUrl4
doc <- xmlTreeParse(fileUrl4, useInternal = TRUE)
q4 <- download.file(fileUrl4, "q4.xml")
doc <- xmlTreeParse("q4.xml", useInternal = TRUE)
rootNode <- xmlRoot(doc)
rootNode
xmlName(rootNode)
rootNode[[1]]
rootNode[[1]][[1]]
zips <- xpathSApply(rootNode, "//zipcode", xmlValue)
nrow(zips)
str(zips)
zips <- as.numeric(zips)
nrow(zips)
length(zips)
zips <- xpathSApply(rootNode, "//zipcode", xmlValue)
sum(zips == "21231")
fileUrl5 <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv"
download.file(fileUrl5, "q5.csv")
install.packages("data.table")
library(data.table)
DT <- fread("q5.csv")
head(DT)
ncol(DT)
nrow(DT)
DT[,mean(pwgtp15), by = SEX]
